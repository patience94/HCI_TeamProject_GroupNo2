<?xml version="1.0" encoding="utf-8" standalone="no" ?>
<CommandDefinitions>
  <EnvironmentDefinition Id="Package3DEnvironment">
    <Tooltip>
      <ExpandedContent ToolClip="ToolClip/package3d.png">
        <TextBlock _LCLZId="lclzPCB3DWorkspaceTitle" _LCLZText="3D Packaged editor"/>
        <TextBlock/>
      </ExpandedContent>
    </Tooltip>
  </EnvironmentDefinition>
  <CommandDefinition Id="Package3DCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="Package3DCmd" _LCLZText="Package 3D editor"/>
        <TextBlock/>
      </ExpandedContent>
    </Tooltip>
  </CommandDefinition>
  <CommandDefinition Id="Package3DStop">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="Package3DStop" _LCLZText="Finish and update library"/>
        <TextBlock/>
      </ExpandedContent>
    </Tooltip>
  </CommandDefinition>
  <CommandDefinition Id="ShowElectronDescriptionCommand">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="ShowElectronDescriptionCmd" _LCLZText="Show Electron Description Command"/>
        <TextBlock/>
      </ExpandedContent>
    </Tooltip>
  </CommandDefinition>
  <CommandDefinition Id="HideElectronDescriptionCommand">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="HideElectronDescriptionCmd" _LCLZText="Hide Electron Description Command"/>
        <TextBlock/>
      </ExpandedContent>
    </Tooltip>
  </CommandDefinition>
  <CommandDefinition Id="ContentManagerPanelOpenCommand">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="ContentManagerPanelOpenCmd" _LCLZText="Show Content Manager Command"/>
        <TextBlock/>
      </ExpandedContent>
    </Tooltip>
  </CommandDefinition>
  <CommandDefinition Id="ContentManagerPanelCloseCommand">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="ContentManagerPanelCloseCmd" _LCLZText="Hide Content Manager Command"/>
        <TextBlock/>
      </ExpandedContent>
    </Tooltip>
  </CommandDefinition>
    <CommandDefinition Id="ShowElectronDesignManagerCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="ShowElectronDesignManagerCmd" _LCLZText="Show Electron Design Manager Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <CommandDefinition Id="HideElectronDesignManagerCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="HideElectronDesignManagerCmd" _LCLZText="Hide Electron Design Manager Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <CommandDefinition Id="ShowElectronInspectorCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="ShowElectronInspectorCmd" _LCLZText="Show Electron Inspector Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <CommandDefinition Id="HideElectronInspectorCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="HideElectronInspectorCmd" _LCLZText="Hide Electron Inspector Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <CommandDefinition Id="ShowElectronSelectionFilterCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="ShowElectronSelectionFilterCmd" _LCLZText="Show Electron Selection Filter Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <CommandDefinition Id="HideElectronSelectionFilterCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="HideElectronSelectionFilterCmd" _LCLZText="Hide Electron Selection Filter Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <CommandDefinition Id="ShowElectronSheetsCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="ShowElectronSheetsCmd" _LCLZText="Show Electron Sheets Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <CommandDefinition Id="HideElectronSheetsCommand">
        <Tooltip>
            <ExpandedContent>
                <TextBlock _LCLZId="HideElectronSheetsCmd" _LCLZText="Hide Electron Sheets Command"/>
                <TextBlock/>
            </ExpandedContent>
        </Tooltip>
    </CommandDefinition>
    <!-- ADD -->
  <CommandDefinition Id="Electron::AddPart">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::AddPart1" _LCLZText="Add elements to a drawing, or symbols to a device."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::AddPart2" _LCLZText="The AddPart command fetches a circuit symbol (gate) or a footprint from the active library and places it into the drawing. During device definition the AddPart command fetches a symbol into the device."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ADD-CMD">
      <Title _LCLZId="Electron::AddPartTitle" _LCLZText="Add Part"/>
      <Tips _LCLZId="Electron::AddPartTips" _LCLZText="Usually you click the AddPart command and select the footprint or symbol from the menu that opens. If necessary, parameters can be entered from the keyboard."/>
      <Desc _LCLZId="Electron::AddPartDesc" _LCLZText="The AddPart command can be used with wildcards ('*' or '?') to find a specific device."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="Electron::AddDesignBlock">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::AddDesignBlock1" _LCLZText="Add a design block to a drawing."/>
        <TextBlock _LCLZId="lclzElectron::AddDesignBlock2" _LCLZText= "If the design block consists of board and schematic the Layout part can be placed with the mouse cursor."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ADDDESIGNBLOCK-CMD">
      <Title _LCLZId="lclzElectron::AddDesignBlockTitle" _LCLZText="Add Design Block"/>
      <Tips _LCLZId="lclzElectron::AddDesignBlockTips" _LCLZText="The Schematic part will be added automatically to the Schematic on new sheets accordingly."/>
      <!--Description _LCLZId="lclzElectron::AddDesignBlockDesc" _LCLZText=""/-->
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="SwitchPcbDocCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzSwitchPcbDocCmd1" _LCLZText="Switch to a PCB document."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzSwitchPcbDocCmd2" _LCLZText="If there is a linked PCB document, will switch to the PCB document, otherwise, will switch to electronics design to remind user to create a PCB document."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="SWITCH-PCB-DOCUMENT-CMD">
      <Title _LCLZId="lclzSwitchPcbDocCmdTipsAndTricksTitle" _LCLZText="Switch PCB Document"/>
      <Tips _LCLZId="lclzSwitchPcbDocCmdTipsAndTricksTips" _LCLZText="Switch to a PCB document."/>
      <Description _LCLZId="lclzSwitchPcbDocCmdTipsAndTricksDesc" _LCLZText="If there is a linked PCB document, will switch to the PCB document, otherwise, will switch to electronics design to remind user to create a PCB document."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="SwitchSchDocCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzSwitchSchDocCmd1" _LCLZText="Switch to a Schematic document."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzSwitchSchDocCmd2" _LCLZText="If there is a linked Schematic document, will switch to the Schematic document, otherwise, will switch to electronics design to remind user to create a Schematic document."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="SWITCH-SCHEMATIC-DOCUMENT-CMD">
      <Title _LCLZId="lclzSwitchSchDocCmdTipsAndTricksTitle" _LCLZText="Switch Schematic Document"/>
      <Tips _LCLZId="lclzSwitchSchDocCmdTipsAndTricksTips" _LCLZText="Switch to a Schematic document."/>
      <Description _LCLZId="lclzSwitchSchDocCmdTipsAndTricksDesc" _LCLZText="If there is a linked Schematic document, will switch to the Schematic document, otherwise, will switch to electronics design to remind user to create a Schematic document."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="GetLatestElectronCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzGetLatestElectronCmd1" _LCLZText="Generate or switch to a PCB document."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzGetLatestElectronCmd2" _LCLZText="If there is a linked PCB document, will switch to the PCB document, otherwise, will create a new PCB document to link with it."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="GET-LATEST-ELECTRON-CMD">
      <Title _LCLZId="lclzGetLatestElectronCmdTipsAndTricksTitle" _LCLZText="Generate Or Switch PCB Document"/>
      <Tips _LCLZId="lclzGetLatestElectronCmdTipsAndTricksTips" _LCLZText="Generate or switch to a PCB document."/>
      <Description _LCLZId="lclzGetLatestElectronCmdTipsAndTricksDesc" _LCLZText="If there is a linked PCB document, will switch to the PCB document, otherwise, will create a new PCB document to link with it."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="ReferenceToPCBCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzReferenceToPCBCmd1" _LCLZText="Reference to a PCB document."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzReferenceToPCBCmd2" _LCLZText="Reference to a PCB document."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="REFERENCE-TO-PCB-DOCUMENT-CMD">
      <Title _LCLZId="lclzReferenceToPCBCmdTipsAndTricksTitle" _LCLZText="Reference to a PCB document"/>
      <Tips _LCLZId="lclzReferenceToPCBCmdTipsAndTricksTips" _LCLZText="Reference to a PCB document."/>
      <Description _LCLZId="lclzReferenceToPCBCmdTipsAndTricksDesc" _LCLZText="Reference to a PCB document."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="ReferenceToSCHCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzReferenceToSCHCmd1" _LCLZText="Reference to a Schematic document."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzReferenceToSCHCmd2" _LCLZText="Reference to a Schematic document."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="REFERENCE-TO-SCH-DOCUMENT-CMD">
      <Title _LCLZId="lclzReferenceToSCHCmdTipsAndTricksTitle" _LCLZText="Reference to a Schematic document"/>
      <Tips _LCLZId="lclzReferenceToSCHCmdTipsAndTricksTips" _LCLZText="Reference to a Schematic document."/>
      <Description _LCLZId="lclzReferenceToSCHCmdTipsAndTricksDesc" _LCLZText="Reference to a Schematic document."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="RemovePCBLinkCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzRemovePCBLinkCmd1" _LCLZText="Remove PCB Link."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzRemovePCBLinkCmd2" _LCLZText="Remove PCB Link."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="REMOVE-PCB-LINK-CMD">
      <Title _LCLZId="lclzRemovePCBLinkCmdTipsAndTricksTitle" _LCLZText="Remove PCB Link."/>
      <Tips _LCLZId="lclzRemovePCBLinkCmdTipsAndTricksTips" _LCLZText="Remove PCB Link."/>
      <Description _LCLZId="lclzRemovePCBLinkCmdTipsAndTricksDesc" _LCLZText="Remove PCB Link."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="RemoveSCHLinkCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzRemoveSCHLinkCmd1" _LCLZText="Remove SCH Link."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzRemoveSCHLinkCmd2" _LCLZText="Remove SCH Link."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="REMOVE-SCH-LINK-CMD">
      <Title _LCLZId="lclzRemoveSCHLinkCmdTipsAndTricksTitle" _LCLZText="Remove SCH Link."/>
      <Tips _LCLZId="lclzRemoveSCHLinkCmdTipsAndTricksTips" _LCLZText="Remove SCH Link."/>
      <Description _LCLZId="lclzRemoveSCHLinkCmdTipsAndTricksDesc" _LCLZText="Remove SCH Link."/>
    </TipsAndTricks>
  </CommandDefinition>
  <CommandDefinition Id="RemovePCB3DLinkCmd">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzRemovePCB3DLinkCmd1" _LCLZText="Remove PCB3D Link."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzRemovePCB3DLinkCmd2" _LCLZText="Remove PCB3D Link."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="REMOVE-PCB3D-LINK-CMD">
      <Title _LCLZId="lclzRemovePCB3DLinkCmdTipsAndTricksTitle" _LCLZText="Remove PCB3D Link."/>
      <Tips _LCLZId="lclzRemovePCB3DLinkCmdTipsAndTricksTips" _LCLZText="Remove PCB3D Link."/>
      <Description _LCLZId="lclzRemovePCB3DLinkCmdTipsAndTricksDesc" _LCLZText="Remove PCB3D Link."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ALIGN -->
  <CommandDefinition Id="Electron::Align">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Align1" _LCLZText="Aligns selected objects in the Layout editor"/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Align2" _LCLZText="Use the Align command to align objects in relation to each other or to move their origin to the nearest grid point. Use the commnd toolbar, the command line, or the Edit menu to start the Align command."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ALIGN-CMD">
      <Title _LCLZId="Electron::AlignTitle" _LCLZText="Align Objects"/>
      <Tips _LCLZId="Electron::AlignTips" _LCLZText="The Align command uses axis aligned bounding boxes of objects to be aligned for all modes except for Align Origin to Grid mode (which as the name implies uses the origin of the object to be aligned)."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ARC -->
  <CommandDefinition Id="Electron::Arc">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Arc1" _LCLZText="Draw an arc of variable diameter, width, and length."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Arc2" _LCLZText="The ARC command, followed by three mouse clicks on a drawing, draws an arc of defined width. The first point defines a point on a circle, the second its diameter. Entering the second coordinate reduces the circle to a semi-circle, while the right button alters the direction from first to second point. Entry of a third coordinate truncates the semi-circle to an arc extending to a point defined by the intersection of the circumference and a line between the third point and the arc center."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ARC-CMD">
      <Title _LCLZId="Electron::ArcTitle" _LCLZText="Arc"/>
      <Tips _LCLZId="Electron::ArcTips" _LCLZText="Use the parameters CW (clockwise) and CCW (counterclockwise) to define the direction of the arc. ROUND and FLAT define whether the arc endings are round or flat, respectively."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ATTRIBUTE -->
  <CommandDefinition Id="Electron::Attribute">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Attribute1" _LCLZText="Definition of attributes for parts."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Attribute2" _LCLZText="An attribute is an arbitrary combination of a name and a value, that can be used to specify any kind of information for a given part."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ATTRIBUTE-CMD">
      <Title _LCLZId="Electron::AttributeTitle" _LCLZText="Attribute"/>
      <Tips _LCLZId="Electron::AttributeTips" _LCLZText="Attributes can be defined in the library (for individual devices), in the schematic (for an actual part) or in the board (for an actual element). Attributes defined on the device level will be used for every part of that device type in the schematic. In a schematic, additional attributes can be defined for each part, and existing attributes from the devices can be overwritten with new values (if the attributes have been defined as variable). An element in the board has all the attributes of its corresponding part, and can have further attributes of its own."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- AUTOROUTER -->
  <CommandDefinition Id="Electron::AutoRouter">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::AutoRouter1" _LCLZText="Starts the AutoRouter"/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::AutoRouter2" _LCLZText="If signal names are specified or signals are selected with the mouse, only these signals are routed. Without parameters the command will try to route all signals. If a '!' character is specified all signals are routed except the signals following the '!' character. The '!' character must be the first parameter and must show up only once."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-AUTOROUTER-CMD">
      <Title _LCLZId="Electron::AutoRouterTitle" _LCLZText="Autorouter"/>
      <Tips _LCLZId="Electron::AutoRouterTips" _LCLZText="The Load and Save options can be used to load the AutoRouter parameters from or save them to the given file. If filename doesn't have the extension '.ctl' it will be appended automatically."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- BUS -->
  <CommandDefinition Id="Electron::Bus">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Bus1" _LCLZText="Draws buses on the bus layer of a schematic."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Bus2" _LCLZText="A Bus is a collection of nets. A Bus has a specification and is drawn as one or more bus line segments. The bus specification may include a unique alias, which is a short name used to identify the bus."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-BUS-CMD">
      <Title _LCLZId="Electron::BusTitle" _LCLZText="Bus"/>
      <Tips _LCLZId="Electron::BusTips" _LCLZText="Reusable bus specifications can be saved as Predefined Buses (PDBs). The PDBs are saved in a file and can be used across projects, even shared with others. "/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- CHANGE -->
  <CommandDefinition Id="Electron::Change">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Change1" _LCLZText="Changes parameters."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Change2" _LCLZText="The Change command is used to change or preset properties of objects. The objects are clicked on with the mouse after the desired parameters have been selected from the Change command menu or have been typed in from the keyboard."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-CHANGE-CMD">
      <Title _LCLZId="Electron::ChangeTitle" _LCLZText="Change"/>
      <Tips _LCLZId="Electron::ChangeTips" _LCLZText="Parameters adjusted with the Change command remain as preset properties for objects added later."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- CIRCLE -->
  <CommandDefinition Id="Electron::Circle">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Circle1" _LCLZText="Adds circles to a drawing."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Circle2" _LCLZText="The width parameter defines the width of the circle's circumference and is the same parameter as used in the Line command. The width can be changed with the command 'Change Width width;''"/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-CIRCLE-CMD">
      <Title _LCLZId="Electron::CircleTitle" _LCLZText="Circle"/>
      <Tips _LCLZId="Electron::CircleTips" _LCLZText="Circles in the layers tRestrict, bRestrict, and vRestrict define restricted areas. They should be defined with a width of 0."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- COPY -->
  <CommandDefinition Id="Electron::Copy">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Copy1" _LCLZText="Copies objects."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Copy2" _LCLZText="The Copy command copies objects within the same drawing, or between libraries. The system generates a new name for the copy but retains the old value. When copying signals (wires), buses, and nets the names are retained, but in all other cases a new name is assigned."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-COPY-CMD">
      <Title _LCLZId="Electron::CopyTitle" _LCLZText="Copy"/>
      <Tips _LCLZId="Electron::CopyTips" _LCLZText="Copy places the selected group of objects on the clipboard, to support multiple Paste operations."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- DELETE -->
  <CommandDefinition Id="Electron::Delete">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Delete1" _LCLZText="Deletes selected objects."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Delete2" _LCLZText="Parts, pads, smds, pins and gates can also be selected by their name, which is especially useful if the object is outside the currently shown window area. Note that when selecting a multi-gate part in a schematic by name, you will need to enter the full instance name, consisting of part and gate name."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-DELETE-CMD">
      <Title _LCLZId="Electron::DeleteTitle" _LCLZText="Delete"/>
      <Tips _LCLZId="Electron::DeleteTips" _LCLZText="After deleting a group, airwires may be left over from the removal of a component, because the airwires were not part of the group. In such a case you can recalculate the airwires with the RatsNest command."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- DIMENSION -->
  <CommandDefinition Id="Electron::Dimension">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Dimension1" _LCLZText="Adds dimensioning to a drawing."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Dimension2" _LCLZText="If an object is first selected, a dimension is applied, such as the length of a straight wire, or diameter of a hole. If no object is selected, the current dimension type is added; right-click to cycle through the various types."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-DIMENSION-CMD">
      <Title _LCLZId="Electron::DimensionTitle" _LCLZText="Dimension"/>
      <Tips _LCLZId="Electron::DimensionTips" _LCLZText="Control how dimensions are drawn by using the Change command with options such as DLine and DUnit."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- DISPLAY -->
  <CommandDefinition Id="Electron::Display">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Display1" _LCLZText="Layer Settings."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Display2" _LCLZText="Layer Settings."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-DIPLAY-CMD">
      <Title _LCLZId="Electron::DisplayTitle" _LCLZText="Layer Settings"/>
      <Tips _LCLZId="Electron::DisplayTips" _LCLZText="Layer Settings."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- DRC -->
  <CommandDefinition Id="Electron::DRC">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::DRC1" _LCLZText="Checks design rules."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::DRC2" _LCLZText="The board is checked against the current design rules. Electrically irrelevant objects (wires in footprints, rectangles, circles and texts) are not checked against each other for clearance errors. "/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-DRC-CMD">
      <Title _LCLZId="Electron::DRCTitle" _LCLZText="Design Rule Check"/>
      <Tips _LCLZId="Electron::DRCTips" _LCLZText="Any errors found are displayed as error polygons in the respective layers, and can be browsed through using the Errors command."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ERC -->
  <CommandDefinition Id="Electron::ERC">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::ERC1" _LCLZText="Checks electrical rules."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::ERC2" _LCLZText="Use this command to test schematics for electrical errors. If a board file is loaded, the ERC command also runs a consistency check between schematic and board. "/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ERC-CMD">
      <Title _LCLZId="Electron::ERCTitle" _LCLZText="Electrical Rule Check"/>
      <Tips _LCLZId="Electron::ERCTips" _LCLZText="ERC detects inconsistencies between the implicit power and supply pins in the schematic and the actual signal connections in the board. Such inconsistencies can occur if the supply pin configuration is modified after the board has been created with the Board command."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ERRORS -->
  <CommandDefinition Id="Electron::Errors">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Errors1" _LCLZText="Shows the errors found by the ERC or DRC command."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Errors2" _LCLZText="If no ERC or DRC has yet been run for the loaded drawing, the check will be started first."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ERRORS-CMD">
      <Title _LCLZId="Electron::ErrorsTitle" _LCLZText="Errors"/>
      <Tips _LCLZId="Electron::ErrorsTips" _LCLZText="The list view in the Errors dialog has up to four sections that contain Consistency errors, Errors, Warnings and Approved messages."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- FANOUT -->
  <CommandDefinition Id="Electron::Fanout">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Fanout1" _LCLZText="Creates fanouts from devices and signals."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Fanout2" _LCLZText="The command creates a routed wire and attached via from pads of the selected device or signal. Only surface mount devices (SMD) or ball-grid array (BGA) devices are fanned out; devices with through-hole pads are ignored."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-FANOUT-CMD">
      <Title _LCLZId="Electron::FanoutTitle" _LCLZText="Fanout"/>
      <Tips _LCLZId="Electron::FanoutTips" _LCLZText="The Width parameter defines the width of the routed wire for the fanout and is the same parameter as used in the Route command. The width can be changed with the command 'Change Width width;'."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- FLIPBOARD-->
  <CommandDefinition Id="Electron::FlipBoard">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::FlipBoard1" _LCLZText=""/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::FlipBoard2" _LCLZText=""/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-FLIPBOARD-CMD">
      <Title _LCLZId="Electron::FlipBoardTitle" _LCLZText=""/>
      <Tips _LCLZId="Electron::FlipBoardTips" _LCLZText=""/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- GATESWAP -->
  <CommandDefinition Id="Electron::GateSwap">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::GateSwap1" _LCLZText="Swaps equivalent gates on a schematic."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::GateSwap2" _LCLZText="Both gates must be identical with the same number of pins and must be allocated the same Swaplevel in the device definition. But they do not need to be in the same device."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-GATESWAP-CMD">
      <Title _LCLZId="Electron::GateSwapTitle" _LCLZText="GateSwap"/>
      <Tips _LCLZId="Electron::GateSwapTips" _LCLZText="The name used in the GateSwap command is the displayed name on the schematic (e.g. U1A for gate A in device U1)"/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- GRID -->
  <CommandDefinition Id="Electron::Grid">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Grid1" _LCLZText="Grid Settings."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Grid2" _LCLZText="Grid Settings."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-GRID-CMD">
      <Title _LCLZId="Electron::GridTitle" _LCLZText="Grid"/>
      <Tips _LCLZId="Electron::GridTips" _LCLZText=""/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- GROUP -->
  <CommandDefinition Id="Electron::Group">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Group1" _LCLZText="Defines a group of objects for a subsequent command."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Group2" _LCLZText="After activating the Group command, objects are selected by click-dragging a rectangle with the mouse."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-GROUP-CMD">
      <Title _LCLZId="Electron::GroupTitle" _LCLZText="Group"/>
      <Tips _LCLZId="Electron::GroupTips" _LCLZText="The group includes all objects whose origin is inside the dragged rectangle, all wires with at least one endpoint inside the dragged rectangle, all circles whose center is inside the dragged rectangle, and all rectangles with any corner inside the dragged rectangle."/>
    </TipsAndTricks>
  </CommandDefinition>

  <CommandDefinition Id="Electron::GroupPolygon">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Group1" _LCLZText="Defines a group of objects for a subsequent command."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Group2" _LCLZText="After activating the Group command, objects are selected by click-dragging a rectangle or drawing a polygon with the mouse."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-GROUP-CMD">
      <Title _LCLZId="Electron::GroupTitle" _LCLZText="Group"/>
      <Tips _LCLZId="Electron::GroupTips" _LCLZText="The group includes all objects whose origin is inside the polygon, all wires with at least one endpoint inside the polygon, all circles whose center is inside the polygon, and all rectangles with any corner inside the polygon."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- HOLE -->
  <CommandDefinition Id="Electron::AddHole">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::AddHole1" _LCLZText="Adds a drill hole to a board or footprint."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::AddHole2" _LCLZText="The parameter drill defines the diameter of the hole in the actual unit."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-HOLE-CMD">
      <Title _LCLZId="Electron::AddHoleTitle" _LCLZText="Hole"/>
      <Tips _LCLZId="Electron::AddHoleTips" _LCLZText="A hole generates a symbol in the Holes layer as well as a circle with the diameter of the hole in the Dimension layer."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- INFO -->
  <CommandDefinition Id="Electron::Info">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Info1" _LCLZText="Displays and modifies object properties."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Info2" _LCLZText="An object's properties are displayed in a dialog, where they can be modified."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-INFO-CMD">
      <Title _LCLZId="Electron::InfoTitle" _LCLZText="Info"/>
      <Tips _LCLZId="Electron::InfoTips" _LCLZText="Parts, pads, smds, pins and gates can be selected by their name, which is useful if the object is outside the currently shown window area."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- INVOKE -->
  <CommandDefinition Id="Electron::Invoke">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Invoke1" _LCLZText="Calls a specific symbol from a device."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Invoke2" _LCLZText="Select a particular gate from a device which is already in use and place it in the schematic (e.g. a power symbol with Addlevel = Request)."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-INVOKE-CMD">
      <Title _LCLZId="Electron::InvokeTitle" _LCLZText="Invoke"/>
      <Tips _LCLZId="Electron::InvokeTips" _LCLZText="To activate gates, first enter the part name (e.g. IC5) and select the gate from the popup dialog. Then define device and gate name from the keyboard (e.g. Invoke IC5 Power). Select an existing gate from the device with the mouse and then select the desired gate from the popup menu that appears. Finally, click to position the new gate."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- JUNCTION -->
  <CommandDefinition Id="Electron::Junction">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Junction1" _LCLZText="Places a dot at intersecting nets."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Junction2" _LCLZText="A connection dot is placed at the intersection of nets that are to be connected. Junction points can be placed only on a net. If placed on the intersection of different nets, the user is given the option to connect the nets."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-JUNCTION-CMD">
      <Title _LCLZId="Electron::JunctionTitle" _LCLZText="Junction"/>
      <Tips _LCLZId="Electron::JunctionTips" _LCLZText="If a net wire is placed at a point where there are at least two other net wires and/or pins, a junction will automatically be placed. "/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- LABEL -->
  <CommandDefinition Id="Electron::Label">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Label1" _LCLZText="Attaches text labels to buses and nets."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Label2" _LCLZText="Bus or net names can be placed on a schematic in any location. Click the bus or net with the mouse, and the relevant label attaches to the mouse cursor. It can be rotated, and moved to a different location or layer. The second mouse click defines the location of the label."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-LABEL-CMD">
      <Title _LCLZId="Electron::LabelTitle" _LCLZText="Label"/>
      <Tips _LCLZId="Electron::LabelTips" _LCLZText="Labels are handled as text, but their value corresponds to the name of the particular bus or net. If a bus or net is renamed with the Name command, all associated labels are renamed automatically."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- LAYER -->
  <CommandDefinition Id="Electron::Layer">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Layer1" _LCLZText="Changes and defines layers."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Layer2" _LCLZText="Use the Layer command with one parameter to change the current layer."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-LAYER-CMD">
      <Title _LCLZId="Electron::LayerTitle" _LCLZText="Layer"/>
      <Tips _LCLZId="Electron::LayerTips" _LCLZText="On the command line, specify a different layer by name or number: 'Layer layer_name' or 'Layer layer_number'."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- LINE -->
  <CommandDefinition Id="Electron::Line">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Line1" _LCLZText="Adds lines (tracks) to a drawing."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Line2" _LCLZText="The line begins at the first point specified and runs to the second. Additional points draw additional line segments. Two mouse clicks at the same position finish the line, and a new one can be started at the position of the next mouse click."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-LINE-CMD">
      <Title _LCLZId="Electron::LineTitle" _LCLZText="Line"/>
      <Tips _LCLZId="Electron::LineTips" _LCLZText="Press the center mouse button to bring up a popup menu and select the layer on which to draw the line."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- MARK -->
  <CommandDefinition Id="Electron::Mark">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Mark1" _LCLZText="Defines a mark on the drawing area."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Mark2" _LCLZText="The coordinates of the mouse cursor relative to that point are displayed in the upper left corner of the screen, with an 'R' prefix. This command is useful when board dimensions or cutouts are to be defined. Entering MARK; turns the mark on or off."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-MARK-CMD">
      <Title _LCLZId="Electron::MarkTitle" _LCLZText="Mark"/>
      <Tips _LCLZId="Electron::MarkTips" _LCLZText="Choose a grid fine enough before using the Mark command."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- MEANDER -->
  <CommandDefinition Id="Electron::Meander">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Meander1" _LCLZText="Balances the lengths of signals in a differential pair."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Meander2" _LCLZText="Click on a wire of a differential pair and move the mouse cursor away from the selection point. If there is a difference in the length of the two signals, and the current mouse position is far enough away from the selection point, a meander-shaped sequence of wires is drawn that increases the length of the shorter signal segment. An indicator attached to the mouse cursor shows the target length, as well as the deviation (in percent) of the two signals from the target length."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-MEANDER-CMD">
      <Title _LCLZId="Electron::MeanderTitle" _LCLZText="Meander"/>
      <Tips _LCLZId="Electron::MeanderTips" _LCLZText="The meander starts at the first click point and extends to the second point the mouse is moved to. The maximum (perpendicular) size of the meander is defined by the distance of the mouse to the meandered wire."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- MIRROR -->
  <CommandDefinition Id="Electron::Mirror">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Mirror1" _LCLZText="Mirrors objects and groups."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Mirror2" _LCLZText="With this command, objects can be mirrored about the y axis. One application for this command is to mirror components for placement on the reverse side of the board."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-MIRROR-CMD">
      <Title _LCLZId="Electron::MirrorTitle" _LCLZText="Mirror"/>
      <Tips _LCLZId="Electron::MirrorTips" _LCLZText="Parts, pads, smds and pins can also be selected by their name, which is useful if the object is outside the currently shown window area."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- MITER -->
  <CommandDefinition Id="Electron::Miter">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Miter1" _LCLZText="Miters wire joints."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Miter2" _LCLZText="Use this command to take the edge off a point where two wires join. The two wires must be on the the same layer, and must have the same width and wire style."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-MITER-CMD">
      <Title _LCLZId="Electron::MiterTitle" _LCLZText="Miter"/>
      <Tips _LCLZId="Electron::MiterTips" _LCLZText="If you select a point where exactly two straight wires join, an additional wire will be inserted between these two wires, according to the given radius. If you click-drag on such a point with the left mouse button, you can define the mitering wire dynamically."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- MODULE -->
  <CommandDefinition Id="Electron::Module">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Module1" _LCLZText="Module"/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Module2" _LCLZText="Creates a module, and adds module instances into a sheet."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-MODULE-CMD">
      <Title _LCLZId="Electron::ModuleTitle" _LCLZText="Module"/>
      <Tips _LCLZId="Electron::ModuleTips" _LCLZText="The orientation of the module instance can be defined textually using the usual definitions as listed in the Add command, such as R0 or R90."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- MOVE -->
  <CommandDefinition Id="Electron::Move">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Move1" _LCLZText="Moves selected objects."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Move2" _LCLZText="Parts, pads, smds, pins and gates can also be selected by their name, which is especially useful if the object is outside the currently shown window area. Note that when selecting a multi-gate part in a schematic by name, you will need to enter the full instance name, consisting of part and gate name."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-MOVE-CMD">
      <Title _LCLZId="Electron::MoveTitle" _LCLZText="Move"/>
      <Tips _LCLZId="Electron::MoveTips" _LCLZText="When moving elements, connected wires (tracks) that belong to a signal are moved too (beware of short circuits!)."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- NAME -->
  <CommandDefinition Id="Electron::Name">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Name1" _LCLZText="Displays and optionally edits names."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Name2" _LCLZText="Parts, elements, pads, smds, pins and gates can also be selected by their name, which is especially useful if the object is outside the currently shown window area. Other object types (e.g. nets, buses, signals) have to be clicked first."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-NAME-CMD">
      <!--<Title _LCLZId="Electron::NameTitle" _LCLZText=""/>
				<Tips _LCLZId="Electron::NameTips" _LCLZText=""/>-->
    </TipsAndTricks>
  </CommandDefinition>

  <!-- NET -->
  <CommandDefinition Id="Electron::Net">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Net1" _LCLZText="Draws nets on a schematic."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Net2" _LCLZText="Draw individual connections (nets) onto the Net layer of a schematic drawing. The first mouse click marks the starting point for the net, the second marks the end point of a segment. Two mouse clicks on the same point end the net."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-NET-CMD">
      <Title _LCLZId="Electron::NetTitle" _LCLZText="Net"/>
      <Tips _LCLZId="Electron::NetTips" _LCLZText="Net wires snap to the tips of pins. When the mouse is within Snap_Length of any portion of a pin (either before or after grid snapping), a small circle appears at the tip of the pin. This indicates that if the mouse is clicked, the resulting net wire point will be placed at the pin tip, creating a connection to the pin."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- OPTIMIZE -->
  <CommandDefinition Id="Electron::Optimize">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Optimize1" _LCLZText="Joins wire segments."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Optimize2" _LCLZText="This command joins wire segments that lie in a straight line. The individual segments must be on the same layer and have the same width. This command is useful to reduce the number of objects in a drawing and to facilitate moving a complete track instead of individual segments."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-OPTIMIZE-CMD">
      <Title _LCLZId="Electron::OptimizeTitle" _LCLZText="Optimize"/>
      <Tips _LCLZId="Electron::OptimizeTips" _LCLZText="When selecting a wire without name, all unnamed wires of the drawing are optimized."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- PAINTROLLER -->
  <CommandDefinition Id="Electron::PaintRoller">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::PaintRoller1" _LCLZText="Transfers selected properties of an object to other objects of the same type."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::PaintRoller2" _LCLZText="Select the properties you want to transfer to other objects of the same type in the Copy Properties dialog of the selected object, then close the dialog with OK, and click the target objects."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-PAINTROLLER-CMD">
      <Title _LCLZId="Electron::PaintRollerTitle" _LCLZText="PaintRoller"/>
      <Tips _LCLZId="Electron::PaintRollerTips" _LCLZText="Start the command in the command line or with the PaintRoller icon in the commands toolbar."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- PASTE -->
  <CommandDefinition Id="Electron::Paste">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Paste1" _LCLZText="Copies the contents of the clipboard or a drawing or a design block file to a drawing."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Paste2" _LCLZText="Using the commands Group, Cut, and Paste, parts of a drawing/library can be copied to the same or different drawings/libraries."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-PASTE-CMD">
      <Title _LCLZId="Electron::PasteTitle" _LCLZText="Paste"/>
      <Tips _LCLZId="Electron::PasteTips" _LCLZText="When pasting from a file, nets that have a label or are connected to a supply pin retain their names, while all others get newly generated names."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- PATTERN -->
  <CommandDefinition Id="Electron::Pattern">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Pattern1" _LCLZText="Makes multiple copies of an object and arranges them in a linear or circular pattern."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Pattern2" _LCLZText="A dialog opens where you specify the number of copies and the X and Y spacing in the linear mode. Click OK to close the dialog, then click the object to be duplicated. The next click into the drawing area fixes the position of the first object to be placed."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-PATTERN-CMD">
      <Title _LCLZId="Electron::PatternTitle" _LCLZText="Pattern"/>
      <Tips _LCLZId="Electron::PatternTips" _LCLZText="This command can be used in the Schematic, Layout, and Library Editor."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- PINSWAP -->
  <CommandDefinition Id="Electron::PinSwap">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::PinSwap1" _LCLZText="Swaps pins or pads."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::PinSwap2" _LCLZText="Use this command to swap pins within the same symbol that have been allocated the same swaplevel (> 0). If a board is tied to a schematic via Back Annotation, two pads can only be swapped if the related pins are swappable."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-PINSWAP-CMD">
      <Title _LCLZId="Electron::PinSwapTitle" _LCLZText="PinSwap"/>
      <Tips _LCLZId="Electron::PinSwapTips" _LCLZText="Wires attached to the swapped pins are moved with the pins, so short circuits can appear. Run the design rules check (DRC) and correct possible errors."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- POLYGON -->
  <CommandDefinition Id="Electron::Polygon">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Polygon1" _LCLZText="Draws polygon areas."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Polygon2" _LCLZText="Polygons in the layers Top, Bottom, and Route2–15 are treated as signals. Polygons in the layers t/b/vRestrict are protected areas for the AutoRouter."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-POLYGON-CMD">
      <Title _LCLZId="Electron::PolygonTitle" _LCLZText="Polygon"/>
      <Tips _LCLZId="Electron::PolygonTips" _LCLZText="The polygon width should always be larger than the hardware resolution of the output device."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- PORT -->
  <CommandDefinition Id="Electron::Port">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Port1" _LCLZText="Adds ports to modules."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Port2" _LCLZText="Use this command to add ports to modules used in hierarchical schematics."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-PORT-CMD">
      <Title _LCLZId="Electron::PortTitle" _LCLZText="Port"/>
      <Tips _LCLZId="Electron::PortTips" _LCLZText="The position and orientation are calculated automatically on the closest side of the module symbol."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- QROUTEAIRWIRE -->
  <CommandDefinition Id="Electron::QuickRouteAirWire">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::QuickRouteAirWire1" _LCLZText="Automatically routes an individual airwire."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::QuickRouteAirWire2" _LCLZText="In QuickRouteAirwire mode, you select individual airwires to be automatically routed, and the Route command instantly routes them."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-QROUTEAIRWIRE-CMD">
      <Title _LCLZId="Electron::QuickRouteAirWireTitle" _LCLZText="QuickRouteAirWire"/>
      <Tips _LCLZId="Electron::QuickRouteAirWireTips" _LCLZText="You can select an existing wire, pad, or via in the design, and if the command can determine an unambiguous nearby airwire then it will route that."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- QROUTESIGNAL -->
  <CommandDefinition Id="Electron::QuickRouteSignal">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::QuickRouteSignal1" _LCLZText="Automatically routes a signal."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::QuickRouteSignal2" _LCLZText="With QuickRouteSignal, you select any signal object (airwire, wire, pad, or via) and the command instantly routes all airwires that are members of that signal."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-QROUTESIGNAL-CMD">
      <Title _LCLZId="Electron::QuickRouteSignalTitle" _LCLZText="QuickRouteSignal"/>
      <Tips _LCLZId="Electron::QuickRouteSignalTips" _LCLZText="When the signal that you have selected is one side of a differential pair, the command automatically routes both differential pair signals together."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- QROUTEMULTI -->
  <CommandDefinition Id="Electron::QuickRouteMultiWire">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::QuickRouteMultiWire1" _LCLZText="Automatically routes multiple airwires simultaneously."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::QuickRouteMultiWire2" _LCLZText="Begin by drawing a selection line that intersects through the signal objects that you wish to route concurrently (existing wires, pads, and vias). Continue to draw additional selection lines to add more signal objects. Right-click to route all the airwires connected to the selected objects. The signals are routed on the active layer."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-QROUTEMULTI-CMD">
      <Title _LCLZId="Electron::QuickRouteMultiWireTitle" _LCLZText="QuickRouteMultiWire"/>
      <Tips _LCLZId="Electron::QuickRouteMultiWireTips" _LCLZText="Press the Esc key if you need to clear the selection list and begin again."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- QROUTESMOOTH -->
  <CommandDefinition Id="Electron::QuickRouteSmooth">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::QuickRouteSmooth1" _LCLZText="Automatically smooths the wire sequence on a selected signal."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::QuickRouteSmooth2" _LCLZText="Select an existing routed signal wire, and the QuickRouteSmooth command smooths the wire sequence on the selected wire's layer by reducing the number of wire bends in the sequence."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-QROUTESMOOTH-CMD">
      <!--<Title _LCLZId="Electron::QuickRouteSmoothTitle" _LCLZText=""/>
				<Tips _LCLZId="Electron::QuickRouteSmoothTips" _LCLZText=""/> -->
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RATSNEST -->
  <CommandDefinition Id="Electron::Ratsnest">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Ratsnest1" _LCLZText="Calculates the shortest possible airwires and polygons."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Ratsnest2" _LCLZText="This command assesses the airwire connections to achieve the shortest possible paths, such as after components have been moved."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RATSNEST-CMD">
      <Title _LCLZId="Electron::RatsnestTitle" _LCLZText="Ratsnest"/>
      <Tips _LCLZId="Electron::RatsnestTips" _LCLZText="Ratsnest also calculates all polygons belonging to a signal. This avoids the calculation of airwires for pads already connected through polygons."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RECT -->
  <CommandDefinition Id="Electron::Rectangle">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Rectangle1" _LCLZText="Adds rectangles to a drawing."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Rectangle2" _LCLZText="Two points define two opposite corners of the rectangle. Press the center mouse button to change the layer on which to add the rectangle."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RECT-CMD">
      <Title _LCLZId="Electron::RectangleTitle" _LCLZText="Rectangle"/>
      <Tips _LCLZId="Electron::RectangleTips" _LCLZText="The orientation (see description in Add command) can be any angle in the range R0–R359.9."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- REDRAW 
	<CommandDefinition Id="Electron::ZoomRedraw">
		<Tooltip>
			<ExpandedContent>
				<TextBlock _LCLZId="lclzElectron::Redraw1" _LCLZText=""/>
				<TextBlock/>
				<TextBlock _LCLZId="lclzElectron::Redraw2" _LCLZText=""/>
			</ExpandedContent>
		</Tooltip>
			<TipsAndTricks MoreInfo="PCB-REDRAW-CMD">
				<Title _LCLZId="Electron::Title" _LCLZText="Redraw"/>
				<Tips _LCLZId="Electron::Tips" _LCLZText=""/>
			</TipsAndTricks>
	</CommandDefinition>
	-->

  <!-- REPLACE -->
  <CommandDefinition Id="Electron::Replace">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Replace1" _LCLZText="Replaces a part."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Replace2" _LCLZText="Use this command to replace a part with a different device (even from a different library). The old and new device must be compatible, in that their used gates and connected pins/pads must match, either by their names or their coordinates."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-REPLACE-CMD">
      <Title _LCLZId="Electron::ReplaceTitle" _LCLZText="Replace"/>
      <Tips _LCLZId="Electron::ReplaceTips" _LCLZText="Without parameters, the Replace command opens a dialog from which to select a device from all libraries currently in use. After such a device has been selected, subsequent mouse clicks on parts replace those parts' devices with the selected one if possible."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- REPOSITION -->
  <CommandDefinition Id="Electron::RepositionAttributes">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RepositionAttributes1" _LCLZText="Separates text variables and attributes from parts or elements."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RepositionAttributes2" _LCLZText="After separating the text parameters, they can be placed in fixed positions such as Top-Left or Bottom-Right, or in a new and more convenient location by using the Move command."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-REPOSITION-CMD">
      <Title _LCLZId="Electron::RepositionAttributesTitle" _LCLZText="RepositionAttributes"/>
      <Tips _LCLZId="Electron::RepositionAttributesTips" _LCLZText="Parts and elements can also be selected by their name, which is useful if the object is outside the currently shown window area. "/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RIPUP -->
  <CommandDefinition Id="Electron::Ripup">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Ripup1" _LCLZText="Changes routed wires and vias into airwires, and changes the display of polygons to 'outlines'."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Ripup2" _LCLZText="Selecting an airwire with Ripup converts all adjacent routed wires and vias into airwires, up to the next pad, smd or airwire."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RIPUP-CMD">
      <Title _LCLZId="Electron::RipupTitle" _LCLZText="Ripup"/>
      <Tips _LCLZId="Electron::RipupTips" _LCLZText="If the Ripup command with a name is applied to a signal that contains a polygon, the polygon is displayed with its outlines for faster screen redraw. Use the Ratsnest command to have polygons displayed in the 'real mode' again."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RIPUP ALL -->
  <CommandDefinition Id="Electron::RipupAll">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RipupAll1" _LCLZText="Changes routed wires and vias into airwires, and changes the display of polygons to 'outlines'."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RipupAll2" _LCLZText="Selecting an airwire with Ripup converts all adjacent routed wires and vias into airwires, up to the next pad, smd or airwire."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RIPUPALL-CMD">
      <Title _LCLZId="Electron::RipupAllTitle" _LCLZText="Ripup"/>
      <Tips _LCLZId="Electron::RipupAllTips" _LCLZText="If the Ripup command with a name is applied to a signal that contains a polygon, the polygon is displayed with its outlines for faster screen redraw. Use the Ratsnest command to have polygons displayed in the 'real mode' again."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RIPUP ALL POLYGONS -->
  <CommandDefinition Id="Electron::RipupAllPolygons">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RipupAllPolygons1" _LCLZText="Returns all polygons to an 'unpoured' state, drawn only as outlines."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RipupAllPolygons2" _LCLZText="Select the command Ripup Polygons command to unpour all polygons and edit polygon boundaries as lines."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RIPUPALLPOLYGONS-CMD">
      <Title _LCLZId="Electron::RipupAllPolygonsTitle" _LCLZText="RipupAllPolygons"/>
      <Tips _LCLZId="Electron::RipupAllPolygonsTips" _LCLZText="To invoke the same command using the command line, enter RIPUP @; and press 'ENTER'."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RIPUP CONNECTED COPPER -->
  <CommandDefinition Id="Electron::RipupConnected">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RipupConnected1" _LCLZText="Ripup connected copper will ripup 'direct' connections along a signal path."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RipupConnected2" _LCLZText="Select the command and select a route segment to ripup connected copper."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RIPUPCONNECTED-CMD">
      <Title _LCLZId="Electron::RipupConnectedTitle" _LCLZText="RipupConnected"/>
      <Tips _LCLZId="Electron::RipupConnectedTips" _LCLZText="Use Ripup Connected Copper to limit the scope of a ripup and make reworking sections easier."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RIPUP CONNECTED COPPER SAME LAYER -->
  <CommandDefinition Id="Electron::RipupConnectedSameLayer">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RipupConnectedSameLayer1" _LCLZText="Ripup connected copper on current layer."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RipupConnectedSameLayer2" _LCLZText="Select to ripup connected copper on current signal layer."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RIPUPCONNECTEDSAMELAYER-CMD">
      <Title _LCLZId="Electron::RipupConnectedSameLayerTitle" _LCLZText="RipupConnectedSameLayer"/>
      <Tips _LCLZId="Electron::RipupConnectedSameLayerTips" _LCLZText="Use Ripup Connected Copper on the same layer to ripup fanouts, BGA breakouts, etc."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RIPUP ELEMENT TO ELEMENT -->
  <CommandDefinition Id="Electron::RipupElementToElement">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RipupElementToElement1" _LCLZText="Ripup connections between selected components."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RipupElementToElement2" _LCLZText="Select to ripup connections between two selected components."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RIPUPELEMENTTOELEMENT-CMD">
      <Title _LCLZId="Electron::RipupElementToElementTitle" _LCLZText="RipupElementToElement"/>
      <Tips _LCLZId="Electron::RipupElementToElementTips" _LCLZText="Useful when rerouting connections between components including memory signals, buses, etc"/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RIPUP SIGNAL -->
  <CommandDefinition Id="Electron::RipupSignal">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RipupSignal1" _LCLZText="Ripup selected signal path."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RipupSignal2" _LCLZText="Use to ripup all tracks, vias and polygons in a selected signal"/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RIPUPSIGNAL-CMD">
      <Title _LCLZId="Electron::RipupSignalTitle" _LCLZText="RipupSignal"/>
      <Tips _LCLZId="Electron::RipupSignalTips" _LCLZText="Use to ripup all tracks, vias and polygons in a selected signal"/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ROTATE -->
  <CommandDefinition Id="Electron::Rotate">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Rotate1" _LCLZText="Rotates objects."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Rotate2" _LCLZText="Use this command to change the orientation of objects."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ROTATE-CMD">
      <Title _LCLZId="Electron::RotateTitle" _LCLZText="Rotate"/>
      <Tips _LCLZId="Electron::RotateTips" _LCLZText="If orientation angle is specified, that value will be added to the current orientation of the selected object. Prefixing orientation with the character '=' causes the angle value not to be added, but set absolutely."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ROUTE -->
  <CommandDefinition Id="Electron::ManualRoute">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::ManualRoute1" _LCLZText="Converts unrouted connections into routed wires (tracks)."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::ManualRoute2" _LCLZText="This command activates the manual router, which converts airwires (unrouted connections) into real wires."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ROUTE-CMD">
      <Title _LCLZId="Electron::ManualRouteTitle" _LCLZText="ManualRoute"/>
      <Tips _LCLZId="Electron::ManualRouteTips" _LCLZText="When you select an airwire (a connection on the Unrouted layer), routing begins at the signal object connected to the airwire that is closest to your selection point. Otherwise, the ManualRoute command automatically creates a new airwire from your selected route start point to a nearby target object that is a member of the same signal."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ROUTEDIFF -->
  <CommandDefinition Id="Electron::RouteDiffPair">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RouteDiffPair1" _LCLZText="Converts unrouted connections of a differential pair into routed wires (tracks)."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RouteDiffPair2" _LCLZText="This command activates the differential-pair manual router, and the differential pairs in the design are highlighted. To begin routing a differential pair, left button click over one of the highlighted differential pair airwire or copper objects. "/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ROUTEDIFF-CMD">
      <Title _LCLZId="Electron::RouteDiffPairTitle" _LCLZText="RouteDiff"/>
      <Tips _LCLZId="Electron::RouteDiffPairTips" _LCLZText="When selecting an airwire of a Differential Pair, both signals are routed in parallel. The distance between the two signals as well as the wire and via sizes are determined by the signals' net class. This is done independent of the setting of Options/Set/Misc/Auto set route width and drill."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ROUTEMULTI -->
  <CommandDefinition Id="Electron::RouteMulti">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RouteMulti1" _LCLZText="Converts multiple unrouted connections into routed wires (tracks)."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RouteMulti2" _LCLZText="This command activates the manual router, which converts multiple airwires (unrouted connections) into real wires."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ROUTEMULTI-CMD">
      <Title _LCLZId="Electron::RouteMultiTitle" _LCLZText="RouteMulti"/>
      <Tips _LCLZId="Electron::RouteMultiTips" _LCLZText="To select the signals to route, draw a selection line that intersects through the signal objects that you wish to route concurrently (existing wires, pads, and vias). Continue to draw additional selection lines to add more signal objects."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- RUNULP -->
  <CommandDefinition Id="Electron::RunULP">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::1" _LCLZText="Executes a User Language Program."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::2" _LCLZText="The Run command starts the User Language Program from the file 'file_name'."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-RUNULP-CMD">
      <Title _LCLZId="Electron::Title" _LCLZText="RunULP"/>
      <Tips _LCLZId="Electron::Tips" _LCLZText="Started from a context menu, the object is assigned to a group. It can be identified with the built-in function ingroup() for further processing."/>
    </TipsAndTricks>
  </CommandDefinition>


  <!-- SCRIPT -->
  <CommandDefinition Id="Electron::RunScript">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::RunScript1" _LCLZText="Executes a command file."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::RunScript2" _LCLZText="Use this command to execute sequences of commands that are stored in a script file."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-SCRIPT-CMD">
      <Title _LCLZId="Electron::RunScriptTitle" _LCLZText="RunScript"/>
      <Tips _LCLZId="Electron::RunScriptTips" _LCLZText="If RunScript is typed in at the keyboard and 'file_name' has no extension, the program automatically uses '.scr'."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- SHOW -->
  <CommandDefinition Id="Electron::Show">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Show1" _LCLZText="Highlights objects."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Show2" _LCLZText="Complete signals and nets can be highlighted with the SHOW command, and details are listed in the status bar. If a bus is selected, all nets belonging to that bus will also be highlighted."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-SHOW-CMD">
      <Title _LCLZId="Electron::ShowTitle" _LCLZText="Show"/>
      <Tips _LCLZId="Electron::ShowTips" _LCLZText="Select more than one object for highlighting by pressing the Ctrl key when clicking on the objects."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- SIGNAL -->
  <CommandDefinition Id="Electron::Signal">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Signal1" _LCLZText="Defines signals (connections between the various footprints)."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Signal2" _LCLZText="Define a minimum of two element_name/pad_name pairs; otherwise, no airwire can be generated."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-SIGNAL-CMD">
      <Title _LCLZId="Electron::SignalTitle" _LCLZText="Signal"/>
      <Tips _LCLZId="Electron::SignalTips" _LCLZText="If you use the Signal command to connect pads (or smds) that already belong to different signals, a popup will ask you if you want to connect the signals together, and which name to use for the signal."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- SLICE -->
  <CommandDefinition Id="Electron::Slice">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Slice1" _LCLZText="Splits lines."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Slice2" _LCLZText="Use this command to separate board traces or schematic nets for rerouting. The width defines how much of the line is removed by the slice. The amount of a line that is removed is the larger of either the width setting or twice the line width."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-SLICE-CMD">
      <Title _LCLZId="Electron::SliceTitle" _LCLZText="Slice"/>
      <Tips _LCLZId="Electron::SliceTips" _LCLZText="Only lines from from displayed layers can be sliced. Air lines and polygons are not sliced."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- SPLIT -->
  <CommandDefinition Id="Electron::Split">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Split1" _LCLZText="Splits wires and polygon edges into segments."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Split2" _LCLZText="Use this command to split a wire, segment, or polygon edge into two segments in order, for example, to introduce a bend. This means you can split wires into parts that can be moved with the mouse during the Split command."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-SPLIT-CMD">
      <Title _LCLZId="Electron::SplitTitle" _LCLZText="Split"/>
      <Tips _LCLZId="Electron::SplitTips" _LCLZText="A mouseclick defines the point at which the wire is split. The shorter of the two new segments follows the current wire bend rules and can therefore become two more segments; the longer segment is a straight segment running to the next end point."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- TEXT -->
  <CommandDefinition Id="Electron::AddText">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::AddText1" _LCLZText="Adds text to a drawing."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::AddText2" _LCLZText="When entering several texts it is not necessary to invoke the command each time, as the text command remains active after placing text with the mouse."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-TEXT-CMD">
      <Title _LCLZId="Electron::AddTextTitle" _LCLZText="AddText"/>
      <Tips _LCLZId="Electron::AddTextTips" _LCLZText="The orientation of the text can be defined by the Text command (orientation) using the definitions listed in the Add command, such as R0 and R90. The right mouse button changes the rotation of the text and the center mouse button changes the current layer."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- TOGGLESINGLELAYER -->
  <CommandDefinition Id="Electron::ToggleSingleLayer">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::ToggleSingleLayer1" _LCLZText="Single Layer Mode."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::ToggleSingleLayer2" _LCLZText="Single Layer Mode."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-TEXT-CMD">
      <Title _LCLZId="Electron::ToggleSingleLayerTitle" _LCLZText="ToggleSingleLayer"/>
      <Tips _LCLZId="Electron::ToggleSingleLayerTips" _LCLZText="ToggleSingleLayer."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- VALUE -->
  <CommandDefinition Id="Electron::Value">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Value1" _LCLZText="Displays and changes values."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Value2" _LCLZText="Assign values to circuit elements, such as '1k' for a resistor."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-VALUE-CMD">
      <Title _LCLZId="Electron::ValueTitle" _LCLZText="Value"/>
      <Tips _LCLZId="Electron::ValueTips" _LCLZText="If you type in a value before you select an element, then all of the subsequently selected elements receive this value."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- VIA -->
  <CommandDefinition Id="Electron::Via">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::Via1" _LCLZText="Adds vias to a board."/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::Via2" _LCLZText="When the Via command is active, a via symbol is attached to the cursor. Click the left mouse button to place a via at the current position."/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-VIA-CMD">
      <Title _LCLZId="Electron::ViaTitle" _LCLZText="Via"/>
      <Tips _LCLZId="Electron::ViaTips" _LCLZText="The via is added to a signal if it is placed on an existing signal wire."/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ZOOMIN -->
  <CommandDefinition Id="Electron::ZoomIn">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::ZoomIn1" _LCLZText="TBD"/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::ZoomIn2" _LCLZText="TBD"/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ZOOMIN-CMD">
      <Title _LCLZId="Electron::ZoomInTitle" _LCLZText="ZoomIn"/>
      <Tips _LCLZId="Electron::ZoomInTips" _LCLZText="TBD"/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ZOOMOUT -->
  <CommandDefinition Id="Electron::ZoomOut">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::ZoomOut1" _LCLZText="TBD"/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::ZoomOut2" _LCLZText="TBD"/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ZOOMOUT-CMD">
      <Title _LCLZId="Electron::ZoomOutTitle" _LCLZText="ZoomOut"/>
      <Tips _LCLZId="Electron::ZoomOutTips" _LCLZText="TBD"/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ZOOMIN -->
  <CommandDefinition Id="Electron::ZoomRect">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::ZoomRect1" _LCLZText="TBD"/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::ZoomRect2" _LCLZText="TBD"/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ZOOMRECT-CMD">
      <Title _LCLZId="Electron::ZoomRectTitle" _LCLZText="ZoomRect"/>
      <Tips _LCLZId="Electron::ZoomRectTips" _LCLZText="TBD"/>
    </TipsAndTricks>
  </CommandDefinition>

  <!-- ZOOMIN -->
  <CommandDefinition Id="Electron::ZoomToFit">
    <Tooltip>
      <ExpandedContent>
        <TextBlock _LCLZId="lclzElectron::ZoomToFit1" _LCLZText="TBD"/>
        <TextBlock/>
        <TextBlock _LCLZId="lclzElectron::ZoomToFit2" _LCLZText="TBD"/>
      </ExpandedContent>
    </Tooltip>
    <TipsAndTricks MoreInfo="PCB-ZOOMTOFIT-CMD">
      <Title _LCLZId="Electron::ZoomToFitTitle" _LCLZText="ZoomToFit"/>
      <Tips _LCLZId="Electron::ZoomToFitTips" _LCLZText="TBD"/>
    </TipsAndTricks>
  </CommandDefinition>
</CommandDefinitions>
